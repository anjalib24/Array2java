The default value of an array in most programming languages varies depending on the language and the data type of the array. Hereâ€™s a summary for some common languages:

1. C/C++:
    - No default initialization for basic types. The value is whatever happens to be in the memory location at the time of allocation (i.e., garbage values).

2. Java:
    - `int`: 0
    - `double`: 0.0
    - `boolean`: false
    - `char`: '\u0000' (null character)
    - Object references: null

3. Python (using lists, as Python does not have arrays in the same sense as other languages):
    - Lists do not have default values. Elements must be explicitly initialized.
    - Example: `[None] * 5` creates a list with five `None` elements.

4. C#:
    - `int`: 0
    - `double`: 0.0
    - `bool`: false
    - `char`: '\0' (null character)
    - Object references: null

5. JavaScript:
    - Arrays are sparse, and uninitialized elements are `undefined`.

6. Go:
    - `int`: 0
    - `float64`: 0.0
    - `bool`: false
    - `string`: "" (empty string)

7. Ruby:
    - Arrays do not have default values. Elements must be explicitly initialized.
    - Example: `Array.new(5)` creates an array with five `nil` elements.

If you have a specific language or data type in mind, I can provide more detailed information.